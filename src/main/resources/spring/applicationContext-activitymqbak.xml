<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:tool="http://www.springframework.org/schema/tool"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tool
	http://www.springframework.org/schema/tool/spring-tool.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/jee
	http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/lang
	http://www.springframework.org/schema/lang/spring-lang.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task.xsd
	http://www.springframework.org/schema/cache
	http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/jms
	http://www.springframework.org/schema/jms/spring-jms.xsd">

	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<!-- <property name="brokerURL" value="amqp://lemall:lemalllemall@/?brokerlist='tcp://10.100.151.13:5672'" /> -->
			<!-- <constructor-arg index="0" value="amqp://lemall:lemalllemall@/?brokerlist='tcp://10.100.151.13:5672'" /> -->
			<constructor-arg name="userName" value="lemall"></constructor-arg>
			<constructor-arg name="password" value="lemalllemall"></constructor-arg>
			<constructor-arg name="brokerURL" type="java.lang.String" value="tcp://10.11.144.233:5672"></constructor-arg>
			<!-- <constructor-arg name="userName" value="system"></constructor-arg>
			<constructor-arg name="password" value="manager"></constructor-arg>
			<constructor-arg name="brokerURL" type="java.lang.String" value="tcp://localhost:61616"></constructor-arg> -->
	</bean>

	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<property name="maxConnections" value="10" />
	</bean>
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="pooledConnectionFactory" />
	</bean>

	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>


	<!--这个是队列目的地，点对点的 -->
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>${register.consumer.queue}</value>
		</constructor-arg>
	</bean>
	<!--这个是主题目的地，一对多的 -->
	<!-- <bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic"> 
		<constructor-arg value="topic" /> </bean> -->



	<!-- 消息监听器 -->
	<bean id="consumerMessageListener" class="com.lemall.registerjob.lisenter.ConsumerMessageListener" />

	<!-- 消息监听容器 -->
	<!-- <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer"> 
		<property name="connectionFactory" ref="connectionFactory" /> <property name="destination" 
		ref="queueDestination" /> <property name="messageListener" ref="consumerMessageListener" 
		/> </bean> -->

	<!--消息转换器 -->
	<bean id="myMessageConverter" class="com.lemall.registerjob.converter.MyMessageConverter"></bean>

	<!-- 消息监听适配器 -->
	<bean id="messageListenerAdapter"
		class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<property name="delegate">
			<bean class="com.lemall.registerjob.lisenter.ConsumerMessageListener" />
		</property>
		<property name="defaultListenerMethod" value="receiveMessage" />
		<property name="messageConverter" ref="myMessageConverter" />
	</bean>

	<!-- 消息监听适配器对应的监听容器 -->
	<bean id="messageListenerAdapterContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestination" />
		<!-- 使用MessageListenerAdapter来作为消息监听器 -->
		<property name="messageListener" ref="messageListenerAdapter" />
	</bean>
	
	<bean id="producerDestination" class="org.apache.qpid.client.AMQAnyDestination">
		<constructor-arg index="0"
			value="${qpid.demo.exchange}/${qpid.demo.binding}" />
	</bean>

	<bean id="producerJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="defaultDestination" ref="producerDestination"></property>
		<property name="connectionFactory" ref="connectionFactory"></property>
	</bean>
</beans>